{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const fetchPokemonList = createAsyncThunk('pokemon/fetchPokemonList', async () => {\n  const response = await axios.get('http://localhost:3000/pokemon-list');\n  return response.data;\n});\nconst pokemonSlice = createSlice({\n  name: 'pokemon',\n  initialState: {\n    list: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchPokemonList.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchPokemonList.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.list = action.payload;\n    }).addCase(fetchPokemonList.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport default pokemonSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchPokemonList","response","get","data","pokemonSlice","name","initialState","list","status","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["/Users/suhilman/Documents/Mini-Project/mini_project/src/redux/pokemonSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const fetchPokemonList = createAsyncThunk('pokemon/fetchPokemonList', async () => {\n    const response = await axios.get('http://localhost:3000/pokemon-list');\n    return response.data;\n});\n\nconst pokemonSlice = createSlice({\n    name: 'pokemon',\n    initialState: {\n        list: [],\n        status: 'idle',\n        error: null,\n    },\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchPokemonList.pending, (state) => {\n                state.status = 'loading';\n            })\n            .addCase(fetchPokemonList.fulfilled, (state, action) => {\n                state.status = 'succeeded';\n                state.list = action.payload;\n            })\n            .addCase(fetchPokemonList.rejected, (state, action) => {\n                state.status = 'failed';\n                state.error = action.error.message;\n            });\n    },\n});\n\nexport default pokemonSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,gBAAgB,GAAGF,gBAAgB,CAAC,0BAA0B,EAAE,YAAY;EACrF,MAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,oCAAoC,CAAC;EACtE,OAAOD,QAAQ,CAACE,IAAI;AACxB,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAGP,WAAW,CAAC;EAC7BQ,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACVC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACb,gBAAgB,CAACc,OAAO,EAAGC,KAAK,IAAK;MAC1CA,KAAK,CAACP,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDK,OAAO,CAACb,gBAAgB,CAACgB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACpDF,KAAK,CAACP,MAAM,GAAG,WAAW;MAC1BO,KAAK,CAACR,IAAI,GAAGU,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC,CACDL,OAAO,CAACb,gBAAgB,CAACmB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACnDF,KAAK,CAACP,MAAM,GAAG,QAAQ;MACvBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACR,KAAK,CAACW,OAAO;IACtC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAehB,YAAY,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}