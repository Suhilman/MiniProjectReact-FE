{"ast":null,"code":"var _jsxFileName = \"/Users/suhilman/Documents/mini_project/src/components/PokemonList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport DataTable from 'react-data-table-component';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchPokemonList } from '../redux/pokemonSlice';\nimport { Button, Paper, Container, Typography, CircularProgress, Box, TextField } from '@mui/material';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PokemonList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const pokemonList = useSelector(state => state.pokemon.list);\n  const status = useSelector(state => state.pokemon.status);\n  const [filterText, setFilterText] = useState('');\n  const [filteredPokemonList, setFilteredPokemonList] = useState([]);\n  useEffect(() => {\n    if (status === 'idle') {\n      dispatch(fetchPokemonList());\n    }\n  }, [status, dispatch]);\n  useEffect(() => {\n    setFilteredPokemonList(pokemonList.filter(pokemon => pokemon.name.toLowerCase().includes(filterText.toLowerCase())));\n  }, [filterText, pokemonList]);\n  const columns = [{\n    name: 'Image',\n    selector: row => row.image,\n    cell: row => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: row.image,\n      alt: row.name,\n      style: {\n        width: '50px',\n        height: '50px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 26\n    }, this),\n    width: '70px'\n  }, {\n    name: 'ID',\n    selector: row => row.id,\n    sortable: true,\n    width: '60px'\n  }, {\n    name: 'Name',\n    selector: row => row.name,\n    sortable: true\n  }, {\n    name: 'Types',\n    selector: row => row.types,\n    sortable: true\n  }, {\n    name: 'Actions',\n    cell: row => /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => navigate(`/pokemon-detail/${row.id}`),\n      startIcon: /*#__PURE__*/_jsxDEV(OpenInNewIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 32\n      }, this),\n      children: \"Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      height: '100vh',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        padding: 4,\n        backgroundColor: 'white',\n        width: '100%',\n        borderRadius: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"Pokemon List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), status === 'loading' && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: '50vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), status === 'succeeded' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Search Pok\\xE9mon\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          value: filterText,\n          onChange: e => setFilterText(e.target.value),\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n          columns: columns,\n          data: filteredPokemonList,\n          pagination: true,\n          selectableRowsHighlight: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), status === 'failed' && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"error\",\n        align: \"center\",\n        children: \"Error loading Pokemon list.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(PokemonList, \"OFjCgPK/z3NwkTP6M52znNU7XX8=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector];\n});\n_c = PokemonList;\nexport default PokemonList;\nvar _c;\n$RefreshReg$(_c, \"PokemonList\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","DataTable","useNavigate","fetchPokemonList","Button","Paper","Container","Typography","CircularProgress","Box","TextField","OpenInNewIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","PokemonList","_s","dispatch","navigate","pokemonList","state","pokemon","list","status","filterText","setFilterText","filteredPokemonList","setFilteredPokemonList","filter","name","toLowerCase","includes","columns","selector","row","image","cell","src","alt","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","id","sortable","types","variant","color","onClick","startIcon","children","maxWidth","sx","display","justifyContent","alignItems","elevation","padding","backgroundColor","borderRadius","component","gutterBottom","label","margin","value","onChange","e","target","fullWidth","data","pagination","selectableRowsHighlight","align","_c","$RefreshReg$"],"sources":["/Users/suhilman/Documents/mini_project/src/components/PokemonList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport DataTable from 'react-data-table-component';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchPokemonList } from '../redux/pokemonSlice';\nimport { Button, Paper, Container, Typography, CircularProgress, Box, TextField } from '@mui/material';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\n\nconst PokemonList = () => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const pokemonList = useSelector((state) => state.pokemon.list);\n    const status = useSelector((state) => state.pokemon.status);\n\n    const [filterText, setFilterText] = useState('');\n    const [filteredPokemonList, setFilteredPokemonList] = useState([]);\n\n    useEffect(() => {\n        if (status === 'idle') {\n            dispatch(fetchPokemonList());\n        }\n    }, [status, dispatch]);\n\n    useEffect(() => {\n        setFilteredPokemonList(\n            pokemonList.filter((pokemon) =>\n                pokemon.name.toLowerCase().includes(filterText.toLowerCase())\n            )\n        );\n    }, [filterText, pokemonList]);\n\n    const columns = [\n        {\n            name: 'Image',\n            selector: row => row.image,\n            cell: row => <img src={row.image} alt={row.name} style={{ width: '50px', height: '50px' }} />,\n            width: '70px',\n        },\n        {\n            name: 'ID',\n            selector: row => row.id,\n            sortable: true,\n            width: '60px',\n        },\n        {\n            name: 'Name',\n            selector: row => row.name,\n            sortable: true,\n        },\n        {\n            name: 'Types',\n            selector: row => row.types,\n            sortable: true,\n        },\n        {\n            name: 'Actions',\n            cell: row => (\n                <Button \n                    variant=\"contained\" \n                    color=\"primary\" \n                    onClick={() => navigate(`/pokemon-detail/${row.id}`)}\n                    startIcon={<OpenInNewIcon />}\n                >\n                    Details\n                </Button>\n            ),\n        },\n    ];\n\n    return (\n        <Container\n            maxWidth=\"md\"\n            sx={{\n                height: '100vh', \n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center'\n            }}\n        >\n            <Paper\n                elevation={3}\n                sx={{\n                    padding: 4,\n                    backgroundColor: 'white',\n                    width: '100%',\n                    borderRadius: '10px'\n                }}\n            >\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                    Pokemon List\n                </Typography>\n                {status === 'loading' && (\n                    <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '50vh' }}>\n                        <CircularProgress />\n                    </Box>\n                )}\n                {status === 'succeeded' && (\n                    <>\n                        <TextField\n                            label=\"Search PokÃ©mon\"\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            value={filterText}\n                            onChange={(e) => setFilterText(e.target.value)}\n                            fullWidth\n                        />\n                        <DataTable\n                            columns={columns}\n                            data={filteredPokemonList}\n                            pagination\n                            selectableRowsHighlight\n                        />\n                    </>\n                )}\n                {status === 'failed' && (\n                    <Typography variant=\"body1\" color=\"error\" align=\"center\">\n                        Error loading Pokemon list.\n                    </Typography>\n                )}\n            </Paper>\n        </Container>\n    );\n};\n\nexport default PokemonList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}